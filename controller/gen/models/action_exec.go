// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActionExec definition of the action, such as javascript code or the name of a container
// swagger:model ActionExec
type ActionExec struct {

	// Whether the action has a binary attachment or not. This attribute is ignored when creating or updating an action.
	Binary bool `json:"binary,omitempty"`

	// The code to execute when kind is not 'blackbox'
	Code string `json:"code,omitempty"`

	// For sequence actions, the individual action components
	Components []string `json:"components"`

	// container image name when kind is 'blackbox'
	Image string `json:"image,omitempty"`

	// the type of action
	// Enum: [blackbox java java:default nodejs:6 nodejs:8 nodejs:10 nodejs:12 nodejs:default php:7.3 php:default python:2 python:3 python:default ruby:2.5 ruby:default go:1.11 go:default sequence swift:4.2 swift:default dotnet:2.2 dotnet:default ballerina:0.990 ballerina:default]
	Kind string `json:"kind,omitempty"`

	// main entrypoint of the action code
	Main string `json:"main,omitempty"`
}

// Validate validates this action exec
func (m *ActionExec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var actionExecTypeKindPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["blackbox","java","java:default","nodejs:6","nodejs:8","nodejs:10","nodejs:12","nodejs:default","php:7.3","php:default","python:2","python:3","python:default","ruby:2.5","ruby:default","go:1.11","go:default","sequence","swift:4.2","swift:default","dotnet:2.2","dotnet:default","ballerina:0.990","ballerina:default"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		actionExecTypeKindPropEnum = append(actionExecTypeKindPropEnum, v)
	}
}

const (

	// ActionExecKindBlackbox captures enum value "blackbox"
	ActionExecKindBlackbox string = "blackbox"

	// ActionExecKindJava captures enum value "java"
	ActionExecKindJava string = "java"

	// ActionExecKindJavaDefault captures enum value "java:default"
	ActionExecKindJavaDefault string = "java:default"

	// ActionExecKindNodejs6 captures enum value "nodejs:6"
	ActionExecKindNodejs6 string = "nodejs:6"

	// ActionExecKindNodejs8 captures enum value "nodejs:8"
	ActionExecKindNodejs8 string = "nodejs:8"

	// ActionExecKindNodejs10 captures enum value "nodejs:10"
	ActionExecKindNodejs10 string = "nodejs:10"

	// ActionExecKindNodejs12 captures enum value "nodejs:12"
	ActionExecKindNodejs12 string = "nodejs:12"

	// ActionExecKindNodejsDefault captures enum value "nodejs:default"
	ActionExecKindNodejsDefault string = "nodejs:default"

	// ActionExecKindPhp73 captures enum value "php:7.3"
	ActionExecKindPhp73 string = "php:7.3"

	// ActionExecKindPhpDefault captures enum value "php:default"
	ActionExecKindPhpDefault string = "php:default"

	// ActionExecKindPython2 captures enum value "python:2"
	ActionExecKindPython2 string = "python:2"

	// ActionExecKindPython3 captures enum value "python:3"
	ActionExecKindPython3 string = "python:3"

	// ActionExecKindPythonDefault captures enum value "python:default"
	ActionExecKindPythonDefault string = "python:default"

	// ActionExecKindRuby25 captures enum value "ruby:2.5"
	ActionExecKindRuby25 string = "ruby:2.5"

	// ActionExecKindRubyDefault captures enum value "ruby:default"
	ActionExecKindRubyDefault string = "ruby:default"

	// ActionExecKindGo111 captures enum value "go:1.11"
	ActionExecKindGo111 string = "go:1.11"

	// ActionExecKindGoDefault captures enum value "go:default"
	ActionExecKindGoDefault string = "go:default"

	// ActionExecKindSequence captures enum value "sequence"
	ActionExecKindSequence string = "sequence"

	// ActionExecKindSwift42 captures enum value "swift:4.2"
	ActionExecKindSwift42 string = "swift:4.2"

	// ActionExecKindSwiftDefault captures enum value "swift:default"
	ActionExecKindSwiftDefault string = "swift:default"

	// ActionExecKindDotnet22 captures enum value "dotnet:2.2"
	ActionExecKindDotnet22 string = "dotnet:2.2"

	// ActionExecKindDotnetDefault captures enum value "dotnet:default"
	ActionExecKindDotnetDefault string = "dotnet:default"

	// ActionExecKindBallerina0990 captures enum value "ballerina:0.990"
	ActionExecKindBallerina0990 string = "ballerina:0.990"

	// ActionExecKindBallerinaDefault captures enum value "ballerina:default"
	ActionExecKindBallerinaDefault string = "ballerina:default"
)

// prop value enum
func (m *ActionExec) validateKindEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, actionExecTypeKindPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ActionExec) validateKind(formats strfmt.Registry) error {

	if swag.IsZero(m.Kind) { // not required
		return nil
	}

	// value enum
	if err := m.validateKindEnum("kind", "body", m.Kind); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ActionExec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActionExec) UnmarshalBinary(b []byte) error {
	var res ActionExec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
