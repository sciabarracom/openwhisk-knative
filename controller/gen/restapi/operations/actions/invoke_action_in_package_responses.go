// Code generated by go-swagger; DO NOT EDIT.

package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sciabarracom/openwhisk-knative/controller/gen/models"
)

// InvokeActionInPackageOKCode is the HTTP code returned for type InvokeActionInPackageOK
const InvokeActionInPackageOKCode int = 200

/*InvokeActionInPackageOK Successful activation

swagger:response invokeActionInPackageOK
*/
type InvokeActionInPackageOK struct {
}

// NewInvokeActionInPackageOK creates InvokeActionInPackageOK with default headers values
func NewInvokeActionInPackageOK() *InvokeActionInPackageOK {

	return &InvokeActionInPackageOK{}
}

// WriteResponse to the client
func (o *InvokeActionInPackageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// InvokeActionInPackageAcceptedCode is the HTTP code returned for type InvokeActionInPackageAccepted
const InvokeActionInPackageAcceptedCode int = 202

/*InvokeActionInPackageAccepted Accepted activation request

swagger:response invokeActionInPackageAccepted
*/
type InvokeActionInPackageAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.ActivationID `json:"body,omitempty"`
}

// NewInvokeActionInPackageAccepted creates InvokeActionInPackageAccepted with default headers values
func NewInvokeActionInPackageAccepted() *InvokeActionInPackageAccepted {

	return &InvokeActionInPackageAccepted{}
}

// WithPayload adds the payload to the invoke action in package accepted response
func (o *InvokeActionInPackageAccepted) WithPayload(payload *models.ActivationID) *InvokeActionInPackageAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the invoke action in package accepted response
func (o *InvokeActionInPackageAccepted) SetPayload(payload *models.ActivationID) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InvokeActionInPackageAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InvokeActionInPackageUnauthorizedCode is the HTTP code returned for type InvokeActionInPackageUnauthorized
const InvokeActionInPackageUnauthorizedCode int = 401

/*InvokeActionInPackageUnauthorized Unauthorized request

swagger:response invokeActionInPackageUnauthorized
*/
type InvokeActionInPackageUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewInvokeActionInPackageUnauthorized creates InvokeActionInPackageUnauthorized with default headers values
func NewInvokeActionInPackageUnauthorized() *InvokeActionInPackageUnauthorized {

	return &InvokeActionInPackageUnauthorized{}
}

// WithPayload adds the payload to the invoke action in package unauthorized response
func (o *InvokeActionInPackageUnauthorized) WithPayload(payload *models.ErrorMessage) *InvokeActionInPackageUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the invoke action in package unauthorized response
func (o *InvokeActionInPackageUnauthorized) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InvokeActionInPackageUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InvokeActionInPackageForbiddenCode is the HTTP code returned for type InvokeActionInPackageForbidden
const InvokeActionInPackageForbiddenCode int = 403

/*InvokeActionInPackageForbidden Unauthorized request

swagger:response invokeActionInPackageForbidden
*/
type InvokeActionInPackageForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewInvokeActionInPackageForbidden creates InvokeActionInPackageForbidden with default headers values
func NewInvokeActionInPackageForbidden() *InvokeActionInPackageForbidden {

	return &InvokeActionInPackageForbidden{}
}

// WithPayload adds the payload to the invoke action in package forbidden response
func (o *InvokeActionInPackageForbidden) WithPayload(payload *models.ErrorMessage) *InvokeActionInPackageForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the invoke action in package forbidden response
func (o *InvokeActionInPackageForbidden) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InvokeActionInPackageForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InvokeActionInPackageNotFoundCode is the HTTP code returned for type InvokeActionInPackageNotFound
const InvokeActionInPackageNotFoundCode int = 404

/*InvokeActionInPackageNotFound Item not found

swagger:response invokeActionInPackageNotFound
*/
type InvokeActionInPackageNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewInvokeActionInPackageNotFound creates InvokeActionInPackageNotFound with default headers values
func NewInvokeActionInPackageNotFound() *InvokeActionInPackageNotFound {

	return &InvokeActionInPackageNotFound{}
}

// WithPayload adds the payload to the invoke action in package not found response
func (o *InvokeActionInPackageNotFound) WithPayload(payload *models.ErrorMessage) *InvokeActionInPackageNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the invoke action in package not found response
func (o *InvokeActionInPackageNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InvokeActionInPackageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InvokeActionInPackageRequestTimeoutCode is the HTTP code returned for type InvokeActionInPackageRequestTimeout
const InvokeActionInPackageRequestTimeoutCode int = 408

/*InvokeActionInPackageRequestTimeout Request timed out

swagger:response invokeActionInPackageRequestTimeout
*/
type InvokeActionInPackageRequestTimeout struct {
}

// NewInvokeActionInPackageRequestTimeout creates InvokeActionInPackageRequestTimeout with default headers values
func NewInvokeActionInPackageRequestTimeout() *InvokeActionInPackageRequestTimeout {

	return &InvokeActionInPackageRequestTimeout{}
}

// WriteResponse to the client
func (o *InvokeActionInPackageRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(408)
}

// InvokeActionInPackageTooManyRequestsCode is the HTTP code returned for type InvokeActionInPackageTooManyRequests
const InvokeActionInPackageTooManyRequestsCode int = 429

/*InvokeActionInPackageTooManyRequests Too many requests in a given time period

swagger:response invokeActionInPackageTooManyRequests
*/
type InvokeActionInPackageTooManyRequests struct {
}

// NewInvokeActionInPackageTooManyRequests creates InvokeActionInPackageTooManyRequests with default headers values
func NewInvokeActionInPackageTooManyRequests() *InvokeActionInPackageTooManyRequests {

	return &InvokeActionInPackageTooManyRequests{}
}

// WriteResponse to the client
func (o *InvokeActionInPackageTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(429)
}

// InvokeActionInPackageInternalServerErrorCode is the HTTP code returned for type InvokeActionInPackageInternalServerError
const InvokeActionInPackageInternalServerErrorCode int = 500

/*InvokeActionInPackageInternalServerError Server error

swagger:response invokeActionInPackageInternalServerError
*/
type InvokeActionInPackageInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewInvokeActionInPackageInternalServerError creates InvokeActionInPackageInternalServerError with default headers values
func NewInvokeActionInPackageInternalServerError() *InvokeActionInPackageInternalServerError {

	return &InvokeActionInPackageInternalServerError{}
}

// WithPayload adds the payload to the invoke action in package internal server error response
func (o *InvokeActionInPackageInternalServerError) WithPayload(payload *models.ErrorMessage) *InvokeActionInPackageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the invoke action in package internal server error response
func (o *InvokeActionInPackageInternalServerError) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InvokeActionInPackageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InvokeActionInPackageBadGatewayCode is the HTTP code returned for type InvokeActionInPackageBadGateway
const InvokeActionInPackageBadGatewayCode int = 502

/*InvokeActionInPackageBadGateway Activation produced an application error

swagger:response invokeActionInPackageBadGateway
*/
type InvokeActionInPackageBadGateway struct {
}

// NewInvokeActionInPackageBadGateway creates InvokeActionInPackageBadGateway with default headers values
func NewInvokeActionInPackageBadGateway() *InvokeActionInPackageBadGateway {

	return &InvokeActionInPackageBadGateway{}
}

// WriteResponse to the client
func (o *InvokeActionInPackageBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(502)
}
