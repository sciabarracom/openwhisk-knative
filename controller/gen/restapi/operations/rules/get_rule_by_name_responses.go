// Code generated by go-swagger; DO NOT EDIT.

package rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sciabarracom/openwhisk-knative/controller/gen/models"
)

// GetRuleByNameOKCode is the HTTP code returned for type GetRuleByNameOK
const GetRuleByNameOKCode int = 200

/*GetRuleByNameOK Returned rule

swagger:response getRuleByNameOK
*/
type GetRuleByNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Rule `json:"body,omitempty"`
}

// NewGetRuleByNameOK creates GetRuleByNameOK with default headers values
func NewGetRuleByNameOK() *GetRuleByNameOK {

	return &GetRuleByNameOK{}
}

// WithPayload adds the payload to the get rule by name o k response
func (o *GetRuleByNameOK) WithPayload(payload *models.Rule) *GetRuleByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule by name o k response
func (o *GetRuleByNameOK) SetPayload(payload *models.Rule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRuleByNameUnauthorizedCode is the HTTP code returned for type GetRuleByNameUnauthorized
const GetRuleByNameUnauthorizedCode int = 401

/*GetRuleByNameUnauthorized Unauthorized request

swagger:response getRuleByNameUnauthorized
*/
type GetRuleByNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetRuleByNameUnauthorized creates GetRuleByNameUnauthorized with default headers values
func NewGetRuleByNameUnauthorized() *GetRuleByNameUnauthorized {

	return &GetRuleByNameUnauthorized{}
}

// WithPayload adds the payload to the get rule by name unauthorized response
func (o *GetRuleByNameUnauthorized) WithPayload(payload *models.ErrorMessage) *GetRuleByNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule by name unauthorized response
func (o *GetRuleByNameUnauthorized) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleByNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRuleByNameNotFoundCode is the HTTP code returned for type GetRuleByNameNotFound
const GetRuleByNameNotFoundCode int = 404

/*GetRuleByNameNotFound Item not found

swagger:response getRuleByNameNotFound
*/
type GetRuleByNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetRuleByNameNotFound creates GetRuleByNameNotFound with default headers values
func NewGetRuleByNameNotFound() *GetRuleByNameNotFound {

	return &GetRuleByNameNotFound{}
}

// WithPayload adds the payload to the get rule by name not found response
func (o *GetRuleByNameNotFound) WithPayload(payload *models.ErrorMessage) *GetRuleByNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule by name not found response
func (o *GetRuleByNameNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleByNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRuleByNameInternalServerErrorCode is the HTTP code returned for type GetRuleByNameInternalServerError
const GetRuleByNameInternalServerErrorCode int = 500

/*GetRuleByNameInternalServerError Server error

swagger:response getRuleByNameInternalServerError
*/
type GetRuleByNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetRuleByNameInternalServerError creates GetRuleByNameInternalServerError with default headers values
func NewGetRuleByNameInternalServerError() *GetRuleByNameInternalServerError {

	return &GetRuleByNameInternalServerError{}
}

// WithPayload adds the payload to the get rule by name internal server error response
func (o *GetRuleByNameInternalServerError) WithPayload(payload *models.ErrorMessage) *GetRuleByNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule by name internal server error response
func (o *GetRuleByNameInternalServerError) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleByNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
