// Code generated by go-swagger; DO NOT EDIT.

package activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sciabarracom/openwhisk-knative/controller/models"
)

// GetActivationLogsOKCode is the HTTP code returned for type GetActivationLogsOK
const GetActivationLogsOKCode int = 200

/*GetActivationLogsOK Return output

swagger:response getActivationLogsOK
*/
type GetActivationLogsOK struct {

	/*
	  In: Body
	*/
	Payload *models.ActivationLogs `json:"body,omitempty"`
}

// NewGetActivationLogsOK creates GetActivationLogsOK with default headers values
func NewGetActivationLogsOK() *GetActivationLogsOK {

	return &GetActivationLogsOK{}
}

// WithPayload adds the payload to the get activation logs o k response
func (o *GetActivationLogsOK) WithPayload(payload *models.ActivationLogs) *GetActivationLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation logs o k response
func (o *GetActivationLogsOK) SetPayload(payload *models.ActivationLogs) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActivationLogsUnauthorizedCode is the HTTP code returned for type GetActivationLogsUnauthorized
const GetActivationLogsUnauthorizedCode int = 401

/*GetActivationLogsUnauthorized Unauthorized request

swagger:response getActivationLogsUnauthorized
*/
type GetActivationLogsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetActivationLogsUnauthorized creates GetActivationLogsUnauthorized with default headers values
func NewGetActivationLogsUnauthorized() *GetActivationLogsUnauthorized {

	return &GetActivationLogsUnauthorized{}
}

// WithPayload adds the payload to the get activation logs unauthorized response
func (o *GetActivationLogsUnauthorized) WithPayload(payload *models.ErrorMessage) *GetActivationLogsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation logs unauthorized response
func (o *GetActivationLogsUnauthorized) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationLogsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActivationLogsNotFoundCode is the HTTP code returned for type GetActivationLogsNotFound
const GetActivationLogsNotFoundCode int = 404

/*GetActivationLogsNotFound Item not found

swagger:response getActivationLogsNotFound
*/
type GetActivationLogsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetActivationLogsNotFound creates GetActivationLogsNotFound with default headers values
func NewGetActivationLogsNotFound() *GetActivationLogsNotFound {

	return &GetActivationLogsNotFound{}
}

// WithPayload adds the payload to the get activation logs not found response
func (o *GetActivationLogsNotFound) WithPayload(payload *models.ErrorMessage) *GetActivationLogsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation logs not found response
func (o *GetActivationLogsNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationLogsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActivationLogsInternalServerErrorCode is the HTTP code returned for type GetActivationLogsInternalServerError
const GetActivationLogsInternalServerErrorCode int = 500

/*GetActivationLogsInternalServerError Server error

swagger:response getActivationLogsInternalServerError
*/
type GetActivationLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetActivationLogsInternalServerError creates GetActivationLogsInternalServerError with default headers values
func NewGetActivationLogsInternalServerError() *GetActivationLogsInternalServerError {

	return &GetActivationLogsInternalServerError{}
}

// WithPayload adds the payload to the get activation logs internal server error response
func (o *GetActivationLogsInternalServerError) WithPayload(payload *models.ErrorMessage) *GetActivationLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation logs internal server error response
func (o *GetActivationLogsInternalServerError) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
