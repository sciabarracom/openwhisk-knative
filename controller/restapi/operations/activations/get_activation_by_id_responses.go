// Code generated by go-swagger; DO NOT EDIT.

package activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sciabarracom/openwhisk-knative/controller/models"
)

// GetActivationByIDOKCode is the HTTP code returned for type GetActivationByIDOK
const GetActivationByIDOKCode int = 200

/*GetActivationByIDOK Return output

swagger:response getActivationByIdOK
*/
type GetActivationByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Activation `json:"body,omitempty"`
}

// NewGetActivationByIDOK creates GetActivationByIDOK with default headers values
func NewGetActivationByIDOK() *GetActivationByIDOK {

	return &GetActivationByIDOK{}
}

// WithPayload adds the payload to the get activation by Id o k response
func (o *GetActivationByIDOK) WithPayload(payload *models.Activation) *GetActivationByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation by Id o k response
func (o *GetActivationByIDOK) SetPayload(payload *models.Activation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActivationByIDUnauthorizedCode is the HTTP code returned for type GetActivationByIDUnauthorized
const GetActivationByIDUnauthorizedCode int = 401

/*GetActivationByIDUnauthorized Unauthorized request

swagger:response getActivationByIdUnauthorized
*/
type GetActivationByIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetActivationByIDUnauthorized creates GetActivationByIDUnauthorized with default headers values
func NewGetActivationByIDUnauthorized() *GetActivationByIDUnauthorized {

	return &GetActivationByIDUnauthorized{}
}

// WithPayload adds the payload to the get activation by Id unauthorized response
func (o *GetActivationByIDUnauthorized) WithPayload(payload *models.ErrorMessage) *GetActivationByIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation by Id unauthorized response
func (o *GetActivationByIDUnauthorized) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationByIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActivationByIDNotFoundCode is the HTTP code returned for type GetActivationByIDNotFound
const GetActivationByIDNotFoundCode int = 404

/*GetActivationByIDNotFound Item not found

swagger:response getActivationByIdNotFound
*/
type GetActivationByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetActivationByIDNotFound creates GetActivationByIDNotFound with default headers values
func NewGetActivationByIDNotFound() *GetActivationByIDNotFound {

	return &GetActivationByIDNotFound{}
}

// WithPayload adds the payload to the get activation by Id not found response
func (o *GetActivationByIDNotFound) WithPayload(payload *models.ErrorMessage) *GetActivationByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation by Id not found response
func (o *GetActivationByIDNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActivationByIDInternalServerErrorCode is the HTTP code returned for type GetActivationByIDInternalServerError
const GetActivationByIDInternalServerErrorCode int = 500

/*GetActivationByIDInternalServerError Server error

swagger:response getActivationByIdInternalServerError
*/
type GetActivationByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetActivationByIDInternalServerError creates GetActivationByIDInternalServerError with default headers values
func NewGetActivationByIDInternalServerError() *GetActivationByIDInternalServerError {

	return &GetActivationByIDInternalServerError{}
}

// WithPayload adds the payload to the get activation by Id internal server error response
func (o *GetActivationByIDInternalServerError) WithPayload(payload *models.ErrorMessage) *GetActivationByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get activation by Id internal server error response
func (o *GetActivationByIDInternalServerError) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActivationByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
