// Code generated by go-swagger; DO NOT EDIT.

package rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sciabarracom/openwhisk-knative/controller/models"
)

// DeleteRuleOKCode is the HTTP code returned for type DeleteRuleOK
const DeleteRuleOKCode int = 200

/*DeleteRuleOK Deleted Item

swagger:response deleteRuleOK
*/
type DeleteRuleOK struct {
}

// NewDeleteRuleOK creates DeleteRuleOK with default headers values
func NewDeleteRuleOK() *DeleteRuleOK {

	return &DeleteRuleOK{}
}

// WriteResponse to the client
func (o *DeleteRuleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteRuleUnauthorizedCode is the HTTP code returned for type DeleteRuleUnauthorized
const DeleteRuleUnauthorizedCode int = 401

/*DeleteRuleUnauthorized Unauthorized request

swagger:response deleteRuleUnauthorized
*/
type DeleteRuleUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeleteRuleUnauthorized creates DeleteRuleUnauthorized with default headers values
func NewDeleteRuleUnauthorized() *DeleteRuleUnauthorized {

	return &DeleteRuleUnauthorized{}
}

// WithPayload adds the payload to the delete rule unauthorized response
func (o *DeleteRuleUnauthorized) WithPayload(payload *models.ErrorMessage) *DeleteRuleUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete rule unauthorized response
func (o *DeleteRuleUnauthorized) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRuleUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRuleNotFoundCode is the HTTP code returned for type DeleteRuleNotFound
const DeleteRuleNotFoundCode int = 404

/*DeleteRuleNotFound Item not found

swagger:response deleteRuleNotFound
*/
type DeleteRuleNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeleteRuleNotFound creates DeleteRuleNotFound with default headers values
func NewDeleteRuleNotFound() *DeleteRuleNotFound {

	return &DeleteRuleNotFound{}
}

// WithPayload adds the payload to the delete rule not found response
func (o *DeleteRuleNotFound) WithPayload(payload *models.ErrorMessage) *DeleteRuleNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete rule not found response
func (o *DeleteRuleNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRuleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRuleInternalServerErrorCode is the HTTP code returned for type DeleteRuleInternalServerError
const DeleteRuleInternalServerErrorCode int = 500

/*DeleteRuleInternalServerError Server error

swagger:response deleteRuleInternalServerError
*/
type DeleteRuleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeleteRuleInternalServerError creates DeleteRuleInternalServerError with default headers values
func NewDeleteRuleInternalServerError() *DeleteRuleInternalServerError {

	return &DeleteRuleInternalServerError{}
}

// WithPayload adds the payload to the delete rule internal server error response
func (o *DeleteRuleInternalServerError) WithPayload(payload *models.ErrorMessage) *DeleteRuleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete rule internal server error response
func (o *DeleteRuleInternalServerError) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRuleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
